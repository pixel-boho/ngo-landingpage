{"version":3,"file":"share-buttons-popup.d.ts","sources":["share-buttons-popup.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, OnDestroy, AfterViewInit } from '@angular/core';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { OverlayRef } from '@angular/cdk/overlay';\nimport { SharePopupOptions } from './share-buttons-popup.model';\nexport declare class ShareButtonsPopup implements AfterViewInit, OnDestroy {\n    private _document;\n    options: SharePopupOptions;\n    private _focusTrapFactory;\n    private _elementRef;\n    /** Overlay ref to close the lightbox */\n    overlayRef: OverlayRef;\n    /** The ARIA role of the lightbox element. */\n    role: string;\n    /** Aria label to assign to the lightbox element */\n    ariaLabel: string;\n    /** ID of the element that should be considered as the lightbox's label. */\n    ariaLabelledBy: string;\n    /** ID of the element that describes the lightbox. */\n    ariaDescribedBy: string;\n    /** The class that traps and manages focus within the lightbox. */\n    private _focusTrap;\n    /** Element that was focused before the lightbox was opened. Save this to restore upon close. */\n    private _elementFocusedBeforeDialogWasOpened;\n    get isBtnCopy(): boolean;\n    constructor(_document: any, options: SharePopupOptions, _focusTrapFactory: FocusTrapFactory, _elementRef: ElementRef);\n    ngAfterViewInit(): void;\n    /** Callback, invoked whenever an animation on the host completes. */\n    ngOnDestroy(): void;\n    /** Moves the focus inside the focus trap. */\n    private _trapFocus;\n    /** Saves a reference to the element that was focused before the lightbox was opened. */\n    private _savePreviouslyFocusedElement;\n    /** Restores focus to the element that was focused before the lightbox opened. */\n    private _restoreFocus;\n}\n"]}