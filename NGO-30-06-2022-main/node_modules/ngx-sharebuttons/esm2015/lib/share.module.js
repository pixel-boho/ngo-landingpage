import { NgModule } from '@angular/core';
import { PlatformModule } from '@angular/cdk/platform';
import { ClipboardModule } from '@angular/cdk/clipboard';
import { ShareDirective } from './share-button.directive';
import { SHARE_BUTTONS_CONFIG } from './share.models';
import * as ɵngcc0 from '@angular/core';
export class ShareModule {
    static withConfig(config) {
        return {
            ngModule: ShareModule,
            providers: [
                { provide: SHARE_BUTTONS_CONFIG, useValue: config }
            ]
        };
    }
}
ShareModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ShareModule });
ShareModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ShareModule_Factory(t) { return new (t || ShareModule)(); }, imports: [[
            PlatformModule,
            ClipboardModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ShareModule, { declarations: function () { return [ShareDirective]; }, imports: function () { return [PlatformModule,
        ClipboardModule]; }, exports: function () { return [ShareDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ShareModule, [{
        type: NgModule,
        args: [{
                imports: [
                    PlatformModule,
                    ClipboardModule
                ],
                declarations: [
                    ShareDirective
                ],
                exports: [
                    ShareDirective
                ]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmUubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9wcm9qZWN0cy9uZ3gtc2hhcmVidXR0b25zL3NyYy9saWIvc2hhcmUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFekQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzFELE9BQU8sRUFBRSxvQkFBb0IsRUFBc0IsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFjMUUsTUFBTSxPQUFPLFdBQVc7QUFDeEIsSUFBRSxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQTJCO0FBQUksUUFDL0MsT0FBTztBQUNYLFlBQU0sUUFBUSxFQUFFLFdBQVc7QUFDM0IsWUFBTSxTQUFTLEVBQUU7QUFDakIsZ0JBQVEsRUFBQyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBQztBQUN6RCxhQUFPO0FBQ1AsU0FBSyxDQUFDO0FBQ04sSUFBRSxDQUFDO0FBQ0g7dUNBckJDLFFBQVEsU0FBQztPQUNSLE9BQU8sRUFBRSxzQkFDUCxjQUFjLHNCQUNkLGVBQWUsa0JBQ2hCLGtCQUNEO0NBQVksRUFBRSxzQkFDWjtXQUFjO0NBQ2Y7SUFDRCxPQUFPLEVBQUUsc0JBQ1AsY0FBYyxrQkFDZixjQUNGOzs7Ozs7Ozs7Ozs7Ozs7OzBCQUNJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUGxhdGZvcm1Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jZGsvcGxhdGZvcm0nO1xuaW1wb3J0IHsgQ2xpcGJvYXJkTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2NsaXBib2FyZCc7XG5cbmltcG9ydCB7IFNoYXJlRGlyZWN0aXZlIH0gZnJvbSAnLi9zaGFyZS1idXR0b24uZGlyZWN0aXZlJztcbmltcG9ydCB7IFNIQVJFX0JVVFRPTlNfQ09ORklHLCBTaGFyZUJ1dHRvbnNDb25maWcgfSBmcm9tICcuL3NoYXJlLm1vZGVscyc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBQbGF0Zm9ybU1vZHVsZSxcbiAgICBDbGlwYm9hcmRNb2R1bGVcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgU2hhcmVEaXJlY3RpdmVcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIFNoYXJlRGlyZWN0aXZlXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgU2hhcmVNb2R1bGUge1xuICBzdGF0aWMgd2l0aENvbmZpZyhjb25maWc/OiBTaGFyZUJ1dHRvbnNDb25maWcpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPFNoYXJlTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBTaGFyZU1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7cHJvdmlkZTogU0hBUkVfQlVUVE9OU19DT05GSUcsIHVzZVZhbHVlOiBjb25maWd9XG4gICAgICBdXG4gICAgfTtcbiAgfVxufVxuIl19