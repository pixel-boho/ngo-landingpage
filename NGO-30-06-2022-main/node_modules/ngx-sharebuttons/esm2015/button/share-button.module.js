import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FontAwesomeModule } from '@fortawesome/angular-fontawesome';
import { ShareModule, SHARE_BUTTONS_CONFIG } from 'ngx-sharebuttons';
// Uncomment the following line in development mode
// import { ShareModule, ShareButtonsConfig, SHARE_BUTTONS_CONFIG } from '../../src/public-api';
import { ShareButton } from './share-button';
import * as ɵngcc0 from '@angular/core';
export class ShareButtonModule {
    static withConfig(config) {
        return {
            ngModule: ShareButtonModule,
            providers: [{ provide: SHARE_BUTTONS_CONFIG, useValue: config }]
        };
    }
}
ShareButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ShareButtonModule });
ShareButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ShareButtonModule_Factory(t) { return new (t || ShareButtonModule)(); }, imports: [[
            ShareModule,
            FontAwesomeModule,
            CommonModule
        ], ShareModule,
        FontAwesomeModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ShareButtonModule, { declarations: function () { return [ShareButton]; }, imports: function () { return [ShareModule,
        FontAwesomeModule,
        CommonModule]; }, exports: function () { return [ShareModule,
        FontAwesomeModule,
        ShareButton]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ShareButtonModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    ShareButton
                ],
                imports: [
                    ShareModule,
                    FontAwesomeModule,
                    CommonModule
                ],
                exports: [
                    ShareModule,
                    FontAwesomeModule,
                    ShareButton
                ]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmUtYnV0dG9uLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXNoYXJlYnV0dG9ucy9idXR0b24vc3JjL3NoYXJlLWJ1dHRvbi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUF1QixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBRXJFLE9BQU8sRUFBRSxXQUFXLEVBQXNCLG9CQUFvQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDekYsbURBQW1EO0FBQ25ELGdHQUFnRztBQUVoRyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7O0FBaUI3QyxNQUFNLE9BQU8saUJBQWlCO0FBQzlCLElBQUUsTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUEyQjtBQUFJLFFBQy9DLE9BQU87QUFDWCxZQUFNLFFBQVEsRUFBRSxpQkFBaUI7QUFDakMsWUFBTSxTQUFTLEVBQUUsQ0FBQyxFQUFDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFDLENBQUM7QUFDcEUsU0FBSyxDQUFDO0FBQ04sSUFBRSxDQUFDO0FBQ0g7NkNBdEJDLFFBQVEsU0FBQztDQUNSLFlBQVksRUFBRSxzQkFDWixXQUFXLGtCQUNaLGtCQUNELE9BQU8sRUFBRSxzQkFDUCxXQUFXLHNCQUNYO1dBQWlCO1FBQ2pCLFlBQVk7T0FDYjtBQUNELE9BQU8sRUFBRTtPQUNQLFdBQVc7U0FDWCxpQkFBaUIsc0JBQ2pCLFdBQVcsa0JBQ1osY0FDRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFDSTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBGb250QXdlc29tZU1vZHVsZSB9IGZyb20gJ0Bmb3J0YXdlc29tZS9hbmd1bGFyLWZvbnRhd2Vzb21lJztcblxuaW1wb3J0IHsgU2hhcmVNb2R1bGUsIFNoYXJlQnV0dG9uc0NvbmZpZywgU0hBUkVfQlVUVE9OU19DT05GSUcgfSBmcm9tICduZ3gtc2hhcmVidXR0b25zJztcbi8vIFVuY29tbWVudCB0aGUgZm9sbG93aW5nIGxpbmUgaW4gZGV2ZWxvcG1lbnQgbW9kZVxuLy8gaW1wb3J0IHsgU2hhcmVNb2R1bGUsIFNoYXJlQnV0dG9uc0NvbmZpZywgU0hBUkVfQlVUVE9OU19DT05GSUcgfSBmcm9tICcuLi8uLi9zcmMvcHVibGljLWFwaSc7XG5cbmltcG9ydCB7IFNoYXJlQnV0dG9uIH0gZnJvbSAnLi9zaGFyZS1idXR0b24nO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBTaGFyZUJ1dHRvblxuICBdLFxuICBpbXBvcnRzOiBbXG4gICAgU2hhcmVNb2R1bGUsXG4gICAgRm9udEF3ZXNvbWVNb2R1bGUsXG4gICAgQ29tbW9uTW9kdWxlXG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBTaGFyZU1vZHVsZSxcbiAgICBGb250QXdlc29tZU1vZHVsZSxcbiAgICBTaGFyZUJ1dHRvblxuICBdXG59KVxuZXhwb3J0IGNsYXNzIFNoYXJlQnV0dG9uTW9kdWxlIHtcbiAgc3RhdGljIHdpdGhDb25maWcoY29uZmlnPzogU2hhcmVCdXR0b25zQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxTaGFyZUJ1dHRvbk1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogU2hhcmVCdXR0b25Nb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFt7cHJvdmlkZTogU0hBUkVfQlVUVE9OU19DT05GSUcsIHVzZVZhbHVlOiBjb25maWd9XVxuICAgIH07XG4gIH1cbn1cbiJdfQ==