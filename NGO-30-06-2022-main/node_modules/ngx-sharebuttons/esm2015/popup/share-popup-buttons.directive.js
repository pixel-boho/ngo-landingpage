import { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';
import { SharePopupService } from './share-popup.service';
// import { ShareService, SHARE_BUTTONS } from '../../src/public-api';
import { ShareService, SHARE_BUTTONS } from 'ngx-sharebuttons';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-sharebuttons';
export class SharePopupButtonsDirective {
    constructor(_sharePopup, _share) {
        this._sharePopup = _sharePopup;
        this._share = _share;
        this.theme = this._share.config.theme;
        this.include = Object.keys(SHARE_BUTTONS);
        this.closeIcon = ['fas', 'times-circle'];
        /** Show buttons icons */
        this.showIcon = true;
        /** Show buttons text */
        this.showText = false;
        /** Buttons size */
        this.size = 0;
        this.hasBackdrop = true;
        /** Share dialog opened event */
        this.opened = new EventEmitter();
        /** Share dialog closed event */
        this.closed = new EventEmitter();
        // Stream that emits when the share popup is closed
        this.popupClosed = new EventEmitter();
        this._popupClosed = this.popupClosed.subscribe(() => this.close());
    }
    onClick(e) {
        this._sharePopup.open({
            theme: this.theme,
            include: this.include,
            exclude: this.exclude,
            url: this.url,
            title: this.title,
            description: this.description,
            image: this.image,
            tags: this.tags,
            autoSetMeta: this.autoSetMeta,
            show: this.show,
            showIcon: this.showIcon,
            showText: this.showText,
            size: this.size,
            disabled: this.disabled,
            opened: this.opened,
            closed: this.closed,
            closeIcon: this.closeIcon,
            closeClick: this.popupClosed,
            hasBackdrop: this.hasBackdrop,
            backdropClass: this.backdropClass
        });
    }
    ngOnDestroy() {
        this._popupClosed.unsubscribe();
    }
    close() {
        this._sharePopup.close();
    }
}
SharePopupButtonsDirective.ɵfac = function SharePopupButtonsDirective_Factory(t) { return new (t || SharePopupButtonsDirective)(ɵngcc0.ɵɵdirectiveInject(SharePopupService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ShareService)); };
SharePopupButtonsDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SharePopupButtonsDirective, selectors: [["", "shareButtonsPopup", ""]], hostBindings: function SharePopupButtonsDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function SharePopupButtonsDirective_click_HostBindingHandler($event) { return ctx.onClick($event); });
    } }, inputs: { theme: "theme", include: "include", closeIcon: "closeIcon", showIcon: "showIcon", showText: "showText", size: "size", hasBackdrop: "hasBackdrop", exclude: "exclude", url: "url", title: "title", description: "description", image: "image", tags: "tags", autoSetMeta: "autoSetMeta", show: "show", disabled: "disabled", backdropClass: "backdropClass" }, outputs: { opened: "opened", closed: "closed", popupClosed: "popupClosed" } });
SharePopupButtonsDirective.ctorParameters = () => [
    { type: SharePopupService },
    { type: ShareService }
];
SharePopupButtonsDirective.propDecorators = {
    theme: [{ type: Input }],
    include: [{ type: Input }],
    exclude: [{ type: Input }],
    closeIcon: [{ type: Input }],
    url: [{ type: Input }],
    title: [{ type: Input }],
    description: [{ type: Input }],
    image: [{ type: Input }],
    tags: [{ type: Input }],
    autoSetMeta: [{ type: Input }],
    show: [{ type: Input }],
    showIcon: [{ type: Input }],
    showText: [{ type: Input }],
    size: [{ type: Input }],
    disabled: [{ type: Input }],
    hasBackdrop: [{ type: Input }],
    backdropClass: [{ type: Input }],
    opened: [{ type: Output }],
    closed: [{ type: Output }],
    popupClosed: [{ type: Output }],
    onClick: [{ type: HostListener, args: ['click', ['$event'],] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SharePopupButtonsDirective, [{
        type: Directive,
        args: [{
                selector: '[shareButtonsPopup]'
            }]
    }], function () { return [{ type: SharePopupService }, { type: ɵngcc1.ShareService }]; }, { theme: [{
            type: Input
        }], include: [{
            type: Input
        }], closeIcon: [{
            type: Input
        }], showIcon: [{
            type: Input
        }], showText: [{
            type: Input
        }], size: [{
            type: Input
        }], hasBackdrop: [{
            type: Input
        }], opened: [{
            type: Output
        }], closed: [{
            type: Output
        }], popupClosed: [{
            type: Output
        }], onClick: [{
            type: HostListener,
            args: ['click', ['$event']]
        }], exclude: [{
            type: Input
        }], url: [{
            type: Input
        }], title: [{
            type: Input
        }], description: [{
            type: Input
        }], image: [{
            type: Input
        }], tags: [{
            type: Input
        }], autoSetMeta: [{
            type: Input
        }], show: [{
            type: Input
        }], disabled: [{
            type: Input
        }], backdropClass: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmUtcG9wdXAtYnV0dG9ucy5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1zaGFyZWJ1dHRvbnMvcG9wdXAvc3JjL3NoYXJlLXBvcHVwLWJ1dHRvbnMuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQWEsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hHLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRTFELHNFQUFzRTtBQUN0RSxPQUFPLEVBQUUsWUFBWSxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDOzs7QUFLL0QsTUFBTSxPQUFPLDBCQUEwQjtBQUFHLElBeUR4QyxZQUFvQixXQUE4QixFQUFVLE1BQW9CO0FBQ2xGLFFBRHNCLGdCQUFXLEdBQVgsV0FBVyxDQUFtQjtBQUFDLFFBQVMsV0FBTSxHQUFOLE1BQU0sQ0FBYztBQUFDLFFBdkR4RSxVQUFLLEdBQVcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO0FBQ3BELFFBQ1csWUFBTyxHQUFhLE1BQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDMUQsUUFHVyxjQUFTLEdBQXNCLENBQUMsS0FBSyxFQUFFLGNBQWMsQ0FBQyxDQUFDO0FBQ2xFLFFBcUJFLHlCQUF5QjtBQUMzQixRQUFXLGFBQVEsR0FBRyxJQUFJLENBQUM7QUFDM0IsUUFDRSx3QkFBd0I7QUFDMUIsUUFBVyxhQUFRLEdBQUcsS0FBSyxDQUFDO0FBQzVCLFFBQ0UsbUJBQW1CO0FBQ3JCLFFBQVcsU0FBSSxHQUFHLENBQUMsQ0FBQztBQUNwQixRQUlXLGdCQUFXLEdBQUcsSUFBSSxDQUFDO0FBQzlCLFFBR0UsZ0NBQWdDO0FBQ2xDLFFBQVksV0FBTSxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7QUFD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c3RMaXN0ZW5lciwgSW5wdXQsIE9uRGVzdHJveSwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTaGFyZVBvcHVwU2VydmljZSB9IGZyb20gJy4vc2hhcmUtcG9wdXAuc2VydmljZSc7XG5cbi8vIGltcG9ydCB7IFNoYXJlU2VydmljZSwgU0hBUkVfQlVUVE9OUyB9IGZyb20gJy4uLy4uL3NyYy9wdWJsaWMtYXBpJztcbmltcG9ydCB7IFNoYXJlU2VydmljZSwgU0hBUkVfQlVUVE9OUyB9IGZyb20gJ25neC1zaGFyZWJ1dHRvbnMnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbc2hhcmVCdXR0b25zUG9wdXBdJ1xufSlcbmV4cG9ydCBjbGFzcyBTaGFyZVBvcHVwQnV0dG9uc0RpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG5cbiAgQElucHV0KCkgdGhlbWU6IHN0cmluZyA9IHRoaXMuX3NoYXJlLmNvbmZpZy50aGVtZTtcblxuICBASW5wdXQoKSBpbmNsdWRlOiBzdHJpbmdbXSA9IE9iamVjdC5rZXlzKFNIQVJFX0JVVFRPTlMpO1xuXG4gIEBJbnB1dCgpIGV4Y2x1ZGUhOiBzdHJpbmdbXTtcblxuICBASW5wdXQoKSBjbG9zZUljb246IHN0cmluZyB8IHN0cmluZ1tdID0gWydmYXMnLCAndGltZXMtY2lyY2xlJ107XG5cbiAgLyoqIFRoZSBzaGFyaW5nIGxpbmsgKi9cbiAgQElucHV0KCkgdXJsOiBzdHJpbmc7XG5cbiAgLyoqIFRoZSB0aXRsZSBwYXJhbWV0ZXIgKi9cbiAgQElucHV0KCkgdGl0bGU6IHN0cmluZztcblxuICAvKiogVGhlIGRlc2NyaXB0aW9uIHBhcmFtZXRlciAqL1xuICBASW5wdXQoKSBkZXNjcmlwdGlvbjogc3RyaW5nO1xuXG4gIC8qKiBUaGUgaW1hZ2UgcGFyYW1ldGVyIGZvciBzaGFyaW5nIG9uIFBpbnRlcmVzdCAqL1xuICBASW5wdXQoKSBpbWFnZTogc3RyaW5nO1xuXG4gIC8qKiBUaGUgdGFncyBwYXJhbWV0ZXIgZm9yIHNoYXJpbmcgb24gVHdpdHRlciBhbmQgVHVtYmxyICovXG4gIEBJbnB1dCgpIHRhZ3M6IHN0cmluZztcblxuICAvKiogU2V0cyBtZXRhIHRhZ3MgZnJvbSBkb2N1bWVudCBoZWFkLCB1c2VmdWwgd2hlbiBTRU8gaXMgYXZhaWxhYmxlICovXG4gIEBJbnB1dCgpIGF1dG9TZXRNZXRhOiBib29sZWFuO1xuXG4gIEBJbnB1dCgpIHNob3c6IG51bWJlcjtcblxuICAvKiogU2hvdyBidXR0b25zIGljb25zICovXG4gIEBJbnB1dCgpIHNob3dJY29uID0gdHJ1ZTtcblxuICAvKiogU2hvdyBidXR0b25zIHRleHQgKi9cbiAgQElucHV0KCkgc2hvd1RleHQgPSBmYWxzZTtcblxuICAvKiogQnV0dG9ucyBzaXplICovXG4gIEBJbnB1dCgpIHNpemUgPSAwO1xuXG4gIC8qKiBBIGZsYWcgdGhhdCBpbmRpY2F0ZXMgaWYgdGhlIGJ1dHRvbidzIGNsaWNrIGlzIGRpc2FibGVkICovXG4gIEBJbnB1dCgpIGRpc2FibGVkOiBib29sZWFuO1xuXG4gIEBJbnB1dCgpIGhhc0JhY2tkcm9wID0gdHJ1ZTtcblxuICBASW5wdXQoKSBiYWNrZHJvcENsYXNzOiBzdHJpbmc7XG5cbiAgLyoqIFNoYXJlIGRpYWxvZyBvcGVuZWQgZXZlbnQgKi9cbiAgQE91dHB1dCgpIG9wZW5lZCA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xuXG4gIC8qKiBTaGFyZSBkaWFsb2cgY2xvc2VkIGV2ZW50ICovXG4gIEBPdXRwdXQoKSBjbG9zZWQgPSBuZXcgRXZlbnRFbWl0dGVyPHN0cmluZz4oKTtcblxuICAvLyBTdHJlYW0gdGhhdCBlbWl0cyB3aGVuIHRoZSBzaGFyZSBwb3B1cCBpcyBjbG9zZWRcbiAgQE91dHB1dCgpIHBvcHVwQ2xvc2VkID0gbmV3IEV2ZW50RW1pdHRlcjx2b2lkPigpO1xuXG4gIHByaXZhdGUgX3BvcHVwQ2xvc2VkID0gdGhpcy5wb3B1cENsb3NlZC5zdWJzY3JpYmUoKCkgPT4gdGhpcy5jbG9zZSgpKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9zaGFyZVBvcHVwOiBTaGFyZVBvcHVwU2VydmljZSwgcHJpdmF0ZSBfc2hhcmU6IFNoYXJlU2VydmljZSkge1xuICB9XG5cbiAgQEhvc3RMaXN0ZW5lcignY2xpY2snLCBbJyRldmVudCddKSBvbkNsaWNrKGUpIHtcbiAgICB0aGlzLl9zaGFyZVBvcHVwLm9wZW4oe1xuICAgICAgdGhlbWU6IHRoaXMudGhlbWUsXG4gICAgICBpbmNsdWRlOiB0aGlzLmluY2x1ZGUsXG4gICAgICBleGNsdWRlOiB0aGlzLmV4Y2x1ZGUsXG4gICAgICB1cmw6IHRoaXMudXJsLFxuICAgICAgdGl0bGU6IHRoaXMudGl0bGUsXG4gICAgICBkZXNjcmlwdGlvbjogdGhpcy5kZXNjcmlwdGlvbixcbiAgICAgIGltYWdlOiB0aGlzLmltYWdlLFxuICAgICAgdGFnczogdGhpcy50YWdzLFxuICAgICAgYXV0b1NldE1ldGE6IHRoaXMuYXV0b1NldE1ldGEsXG4gICAgICBzaG93OiB0aGlzLnNob3csXG4gICAgICBzaG93SWNvbjogdGhpcy5zaG93SWNvbixcbiAgICAgIHNob3dUZXh0OiB0aGlzLnNob3dUZXh0LFxuICAgICAgc2l6ZTogdGhpcy5zaXplLFxuICAgICAgZGlzYWJsZWQ6IHRoaXMuZGlzYWJsZWQsXG4gICAgICBvcGVuZWQ6IHRoaXMub3BlbmVkLFxuICAgICAgY2xvc2VkOiB0aGlzLmNsb3NlZCxcbiAgICAgIGNsb3NlSWNvbjogdGhpcy5jbG9zZUljb24sXG4gICAgICBjbG9zZUNsaWNrOiB0aGlzLnBvcHVwQ2xvc2VkLFxuICAgICAgaGFzQmFja2Ryb3A6IHRoaXMuaGFzQmFja2Ryb3AsXG4gICAgICBiYWNrZHJvcENsYXNzOiB0aGlzLmJhY2tkcm9wQ2xhc3NcbiAgICB9KTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMuX3BvcHVwQ2xvc2VkLnVuc3Vic2NyaWJlKCk7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICB0aGlzLl9zaGFyZVBvcHVwLmNsb3NlKCk7XG4gIH1cbn1cbiJdfQ==