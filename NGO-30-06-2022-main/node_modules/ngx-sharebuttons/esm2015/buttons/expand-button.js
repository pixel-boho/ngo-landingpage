import { Component, Input, Output, ElementRef, EventEmitter, ChangeDetectionStrategy } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@fortawesome/angular-fontawesome';
export class ExpandButton {
    constructor(el) {
        this.toggle = new EventEmitter();
        el.nativeElement.style.setProperty('--button-color', '#FF6651');
    }
}
ExpandButton.ɵfac = function ExpandButton_Factory(t) { return new (t || ExpandButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ExpandButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ExpandButton, selectors: [["expand-button"]], inputs: { moreIcon: "moreIcon", lessIcon: "lessIcon", expanded: "expanded", size: "size" }, outputs: { toggle: "toggle" }, decls: 4, vars: 3, consts: [[1, "sb-wrapper", "sb-expand", "sb-show-icon", 3, "click"], [1, "sb-content"], [1, "sb-icon"], [3, "icon"]], template: function ExpandButton_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "button", 0);
        ɵngcc0.ɵɵlistener("click", function ExpandButton_Template_button_click_0_listener() { return ctx.toggle.emit(!ctx.expanded); });
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelement(3, "fa-icon", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("font-size", ctx.size, "px");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("icon", ctx.expanded ? ctx.lessIcon : ctx.moreIcon);
    } }, directives: [ɵngcc1.FaIconComponent], encapsulation: 2, changeDetection: 0 });
ExpandButton.ctorParameters = () => [
    { type: ElementRef }
];
ExpandButton.propDecorators = {
    moreIcon: [{ type: Input }],
    lessIcon: [{ type: Input }],
    expanded: [{ type: Input }],
    size: [{ type: Input }],
    toggle: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ExpandButton, [{
        type: Component,
        args: [{
                selector: 'expand-button',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: `
    <button class="sb-wrapper sb-expand sb-show-icon"
            [style.fontSize.px]="size"
            (click)="toggle.emit(!expanded)">

      <div class="sb-content">
        <div class="sb-icon">
          <fa-icon [icon]="expanded ? lessIcon : moreIcon"></fa-icon>
        </div>
      </div>
    </button>
  `
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { toggle: [{
            type: Output
        }], moreIcon: [{
            type: Input
        }], lessIcon: [{
            type: Input
        }], expanded: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwYW5kLWJ1dHRvbi5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXNoYXJlYnV0dG9ucy9idXR0b25zL3NyYy9leHBhbmQtYnV0dG9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLHVCQUF1QixFQUFFLE1BQU0sZUFBZSxDQUFDOzs7QUFrQjVHLE1BQU0sT0FBTyxZQUFZO0FBQ3pCLElBT0UsWUFBWSxFQUFjO0FBQzVCLFFBSFksV0FBTSxHQUFHLElBQUksWUFBWSxFQUFXLENBQUM7QUFDakQsUUFFSSxFQUFFLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDcEUsSUFBRSxDQUFDO0FBQ0g7d0NBM0JDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsZUFBZSxrQkFDekIsZUFBZTtDQUFFLHVCQUF1QixDQUFDLE1BQU0sa0JBQy9DLFFBQVEsRUFBRSw4VEFXVCxjQUNGOzs7Ozs7Ozs7Ozs7O3VGQUNJO0FBQUM7QUFFUyxZQXBCb0IsVUFBVTtBQUFHO0FBQUc7QUFBZ0MsdUJBb0JoRixLQUFLO0FBQUssdUJBQ1YsS0FBSztBQUFLLHVCQUNWLEtBQUs7QUFBSyxtQkFDVixLQUFLO0FBQUsscUJBQ1YsTUFBTTtBQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2V4cGFuZC1idXR0b24nLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgdGVtcGxhdGU6IGBcbiAgICA8YnV0dG9uIGNsYXNzPVwic2Itd3JhcHBlciBzYi1leHBhbmQgc2Itc2hvdy1pY29uXCJcbiAgICAgICAgICAgIFtzdHlsZS5mb250U2l6ZS5weF09XCJzaXplXCJcbiAgICAgICAgICAgIChjbGljayk9XCJ0b2dnbGUuZW1pdCghZXhwYW5kZWQpXCI+XG5cbiAgICAgIDxkaXYgY2xhc3M9XCJzYi1jb250ZW50XCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJzYi1pY29uXCI+XG4gICAgICAgICAgPGZhLWljb24gW2ljb25dPVwiZXhwYW5kZWQgPyBsZXNzSWNvbiA6IG1vcmVJY29uXCI+PC9mYS1pY29uPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvYnV0dG9uPlxuICBgXG59KVxuZXhwb3J0IGNsYXNzIEV4cGFuZEJ1dHRvbiB7XG5cbiAgQElucHV0KCkgbW9yZUljb246IGFueTtcbiAgQElucHV0KCkgbGVzc0ljb246IGFueTtcbiAgQElucHV0KCkgZXhwYW5kZWQ6IHN0cmluZztcbiAgQElucHV0KCkgc2l6ZTogbnVtYmVyO1xuICBAT3V0cHV0KCkgdG9nZ2xlID0gbmV3IEV2ZW50RW1pdHRlcjxib29sZWFuPigpO1xuXG4gIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmKSB7XG4gICAgZWwubmF0aXZlRWxlbWVudC5zdHlsZS5zZXRQcm9wZXJ0eSgnLS1idXR0b24tY29sb3InLCAnI0ZGNjY1MScpO1xuICB9XG59XG4iXX0=