{"version":3,"file":"ngx-sharebuttons-popup.umd.js","sources":["../../../projects/ngx-sharebuttons/popup/src/share-buttons-popup.model.ts","../../../projects/ngx-sharebuttons/popup/src/share-buttons-popup.ts","../../../projects/ngx-sharebuttons/popup/src/share-popup.service.ts","../../../projects/ngx-sharebuttons/popup/src/share-popup-buttons.directive.ts","../../../projects/ngx-sharebuttons/popup/src/share-popup.component.ts","../../../projects/ngx-sharebuttons/popup/src/share-buttons-popup.module.ts","../../../projects/ngx-sharebuttons/popup/src/ngx-sharebuttons-popup.ts"],"names":["InjectionToken","Component","ChangeDetectionStrategy","Optional","Inject","DOCUMENT","FocusTrapFactory","ElementRef","ComponentPortal","PortalInjector","Injectable","Overlay","Injector","SHARE_BUTTONS","EventEmitter","Directive","ShareService","Input","Output","HostListener","ShareButtonsModule","SHARE_BUTTONS_CONFIG","NgModule","CommonModule","FontAwesomeModule"],"mappings":"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","sourcesContent":["import { EventEmitter, InjectionToken } from '@angular/core';\n\nexport interface SharePopupOptions {\n  show: number;\n  theme: string;\n  include: string[];\n  exclude: string[];\n  url: string;\n  title: string;\n  description: string;\n  image: string;\n  tags: string;\n  autoSetMeta: boolean;\n  showIcon: boolean;\n  showText: boolean;\n  size: number;\n  disabled: boolean;\n  opened: EventEmitter<string>;\n  closed: EventEmitter<string>;\n  closeIcon?: string | string[];\n  closeClick: EventEmitter<void>;\n  hasBackdrop?: boolean;\n  backdropClass?: string;\n}\n\nexport const SHARE_POPUP_OPTIONS = new InjectionToken<SharePopupOptions>('SHARE_POPUP_OPTIONS');\n","import { Component, ChangeDetectionStrategy, Inject, Optional, ElementRef, OnDestroy, AfterViewInit } from '@angular/core';\nimport { FocusTrap, FocusTrapFactory } from '@angular/cdk/a11y';\nimport { DOCUMENT } from '@angular/common';\nimport { OverlayRef } from '@angular/cdk/overlay';\nimport { SHARE_POPUP_OPTIONS, SharePopupOptions } from './share-buttons-popup.model';\n\n@Component({\n  selector: 'share-buttons-popup',\n  templateUrl: './share-buttons-popup.html',\n  styleUrls: ['./share-buttons-popup.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'tabindex': '-1',\n    'aria-modal': 'true',\n    '[attr.role]': 'role',\n    '[attr.aria-labelledby]': 'ariaLabel ? null : ariaLabelledBy',\n    '[attr.aria-label]': 'ariaLabel',\n    '[attr.aria-describedby]': 'ariaDescribedBy || null'\n  }\n})\nexport class ShareButtonsPopup implements AfterViewInit, OnDestroy {\n\n  /** Overlay ref to close the lightbox */\n  overlayRef: OverlayRef;\n\n  /** The ARIA role of the lightbox element. */\n  role: string;\n\n  /** Aria label to assign to the lightbox element */\n  ariaLabel: string;\n\n  /** ID of the element that should be considered as the lightbox's label. */\n  ariaLabelledBy: string;\n\n  /** ID of the element that describes the lightbox. */\n  ariaDescribedBy: string;\n\n  /** The class that traps and manages focus within the lightbox. */\n  private _focusTrap: FocusTrap;\n\n  /** Element that was focused before the lightbox was opened. Save this to restore upon close. */\n  private _elementFocusedBeforeDialogWasOpened: HTMLElement;\n\n  get isBtnCopy(): boolean {\n    return this.options.exclude && this.options.exclude.filter((btn: string) => btn === 'copy').length > 0;\n  }\n\n  constructor(@Optional() @Inject(DOCUMENT) private _document: any,\n              @Optional() @Inject(SHARE_POPUP_OPTIONS) public options: SharePopupOptions,\n              private _focusTrapFactory: FocusTrapFactory,\n              private _elementRef: ElementRef) {\n    this._savePreviouslyFocusedElement();\n  }\n\n  ngAfterViewInit() {\n    this._trapFocus();\n  }\n\n  /** Callback, invoked whenever an animation on the host completes. */\n  ngOnDestroy() {\n    this.overlayRef.dispose();\n    this._restoreFocus();\n  }\n\n  /** Moves the focus inside the focus trap. */\n  private _trapFocus() {\n    if (!this._focusTrap) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    }\n    // If were to attempt to focus immediately, then the content of the lightbox would not yet be\n    // ready in instances where change detection has to run first. To deal with this, we simply\n    // wait for the microtask queue to be empty.\n    this._focusTrap.focusInitialElementWhenReady();\n  }\n\n  /** Saves a reference to the element that was focused before the lightbox was opened. */\n  private _savePreviouslyFocusedElement() {\n    if (this._document) {\n      this._elementFocusedBeforeDialogWasOpened = this._document.activeElement as HTMLElement;\n\n      // Note that there is no focus method when rendering on the server.\n      if (this._elementRef.nativeElement.focus) {\n        // Move focus onto the lightbox immediately in order to prevent the user from accidentally\n        // opening multiple dialogs at the same time. Needs to be async, because the element\n        // may not be focusable immediately.\n        Promise.resolve().then(() => this._elementRef.nativeElement.focus());\n      }\n    }\n  }\n\n  /** Restores focus to the element that was focused before the lightbox opened. */\n  private _restoreFocus() {\n    const toFocus = this._elementFocusedBeforeDialogWasOpened;\n\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (toFocus && typeof toFocus.focus === 'function') {\n      toFocus.focus();\n    }\n\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n}\n","import { ComponentRef, Injectable, Injector } from '@angular/core';\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal, PortalInjector } from '@angular/cdk/portal';\nimport { ShareButtonsPopup } from './share-buttons-popup';\nimport { SHARE_POPUP_OPTIONS, SharePopupOptions } from './share-buttons-popup.model';\n\n@Injectable()\nexport class SharePopupService {\n\n  private _overlayRef: OverlayRef;\n\n  constructor(private _overlay: Overlay, private _injector: Injector) {\n  }\n\n  open(config?: SharePopupOptions) {\n    if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n      this._overlayRef = this._overlay.create({\n        backdropClass: 'sb-backdrop',\n        hasBackdrop: true,\n        panelClass: '',\n        positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),\n        scrollStrategy: this._overlay.scrollStrategies.block(),\n        disposeOnNavigation: true\n      });\n      const popupComponentPortal = new ComponentPortal(ShareButtonsPopup, null, this.createInjector(config));\n      const sharePopupRef: ComponentRef<ShareButtonsPopup> = this._overlayRef.attach(popupComponentPortal);\n      sharePopupRef.instance.overlayRef = this._overlayRef;\n\n      if (config.hasBackdrop) {\n        this._overlayRef.backdropClick().subscribe(() => this.close());\n      }\n    }\n  }\n\n  /**\n   * Close Share Popup Overlay\n   */\n  close() {\n    if (this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n    }\n  }\n\n  private createInjector(dataToPass: SharePopupOptions): PortalInjector {\n    const injectorTokens = new WeakMap();\n    injectorTokens.set(SHARE_POPUP_OPTIONS, dataToPass);\n    return new PortalInjector(this._injector, injectorTokens);\n  }\n\n}\n","import { Directive, EventEmitter, HostListener, Input, OnDestroy, Output } from '@angular/core';\nimport { SharePopupService } from './share-popup.service';\n\n// import { ShareService, SHARE_BUTTONS } from '../../src/public-api';\nimport { ShareService, SHARE_BUTTONS } from 'ngx-sharebuttons';\n\n@Directive({\n  selector: '[shareButtonsPopup]'\n})\nexport class SharePopupButtonsDirective implements OnDestroy {\n\n  @Input() theme: string = this._share.config.theme;\n\n  @Input() include: string[] = Object.keys(SHARE_BUTTONS);\n\n  @Input() exclude!: string[];\n\n  @Input() closeIcon: string | string[] = ['fas', 'times-circle'];\n\n  /** The sharing link */\n  @Input() url: string;\n\n  /** The title parameter */\n  @Input() title: string;\n\n  /** The description parameter */\n  @Input() description: string;\n\n  /** The image parameter for sharing on Pinterest */\n  @Input() image: string;\n\n  /** The tags parameter for sharing on Twitter and Tumblr */\n  @Input() tags: string;\n\n  /** Sets meta tags from document head, useful when SEO is available */\n  @Input() autoSetMeta: boolean;\n\n  @Input() show: number;\n\n  /** Show buttons icons */\n  @Input() showIcon = true;\n\n  /** Show buttons text */\n  @Input() showText = false;\n\n  /** Buttons size */\n  @Input() size = 0;\n\n  /** A flag that indicates if the button's click is disabled */\n  @Input() disabled: boolean;\n\n  @Input() hasBackdrop = true;\n\n  @Input() backdropClass: string;\n\n  /** Share dialog opened event */\n  @Output() opened = new EventEmitter<string>();\n\n  /** Share dialog closed event */\n  @Output() closed = new EventEmitter<string>();\n\n  // Stream that emits when the share popup is closed\n  @Output() popupClosed = new EventEmitter<void>();\n\n  private _popupClosed = this.popupClosed.subscribe(() => this.close());\n\n  constructor(private _sharePopup: SharePopupService, private _share: ShareService) {\n  }\n\n  @HostListener('click', ['$event']) onClick(e) {\n    this._sharePopup.open({\n      theme: this.theme,\n      include: this.include,\n      exclude: this.exclude,\n      url: this.url,\n      title: this.title,\n      description: this.description,\n      image: this.image,\n      tags: this.tags,\n      autoSetMeta: this.autoSetMeta,\n      show: this.show,\n      showIcon: this.showIcon,\n      showText: this.showText,\n      size: this.size,\n      disabled: this.disabled,\n      opened: this.opened,\n      closed: this.closed,\n      closeIcon: this.closeIcon,\n      closeClick: this.popupClosed,\n      hasBackdrop: this.hasBackdrop,\n      backdropClass: this.backdropClass\n    });\n  }\n\n  ngOnDestroy() {\n    this._popupClosed.unsubscribe();\n  }\n\n  close() {\n    this._sharePopup.close();\n  }\n}\n","import { Component, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\nimport { SharePopupService } from './share-popup.service';\n\n// import { ShareService } from '../../src/public-api';\nimport { ShareService } from 'ngx-sharebuttons';\n\n@Component({\n  selector: 'share-popup-button',\n  template: `\n    <div class=\"sb-button sb-{{theme}}\">\n      <button shareButtonsPopup\n              class=\"sb-wrapper\"\n              [theme]=\"theme\"\n              [include]=\"include\"\n              [exclude]=\"exclude\"\n              [show]=\"show\"\n              [url]=\"url\"\n              [showIcon]=\"showIcon\"\n              [showText]=\"showText\"\n              [size]=\"size\"\n              [tags]=\"tags\"\n              [autoSetMeta]=\"autoSetMeta\"\n              [title]=\"title\"\n              [description]=\"description\"\n              [image]=\"image\"\n              (closed)=\"closed.emit($event)\"\n              (opened)=\"opened.emit($event)\">\n        <div class=\"sb-content\">\n\n          <div *ngIf=\"showIcon\" class=\"sb-icon\">\n            <fa-icon [icon]=\"icon\" [fixedWidth]=\"true\"></fa-icon>\n          </div>\n\n          <div *ngIf=\"showText\" class=\"sb-text\">\n            {{ text }}\n          </div>\n\n        </div>\n      </button>\n    </div>\n  `,\n  styleUrls: ['./share-popup.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SharePopupComponent {\n\n  @Input() theme: string = this._share.config.theme;\n\n  @Input() icon: string | string[] = ['fas', 'share'];\n\n  @Input() text: string = 'Share';\n\n  @Input() include!: string[];\n\n  @Input() exclude!: string[];\n\n  @Input() closeIcon: string | string[] = ['fas', 'times-circle'];\n\n  /** The sharing link */\n  @Input() url: string;\n\n  /** The title parameter */\n  @Input() title: string;\n\n  /** The description parameter */\n  @Input() description: string;\n\n  /** The image parameter for sharing on Pinterest */\n  @Input() image: string;\n\n  /** The tags parameter for sharing on Twitter and Tumblr */\n  @Input() tags: string;\n\n  /** Sets meta tags from document head, useful when SEO is available */\n  @Input() autoSetMeta: boolean;\n\n  @Input() show: number;\n\n  /** Show buttons icons */\n  @Input() showIcon = true;\n\n  /** Show buttons text */\n  @Input() showText = false;\n\n  /** Buttons size */\n  @Input() size = 0;\n\n  /** A flag that indicates if the button's click is disabled */\n  @Input() disabled: boolean;\n\n  @Input() hasBackdrop = true;\n\n  @Input() backdropClass: string;\n\n  /** Share dialog opened event */\n  @Output() opened = new EventEmitter<string>();\n\n  /** Share dialog closed event */\n  @Output() closed = new EventEmitter<string>();\n\n  // Stream that emits when the share popup is closed\n  @Output() popupClosed = new EventEmitter<void>();\n\n  constructor(private _sharePopup: SharePopupService, private _share: ShareService) {\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// import { ShareButtonsConfig, SHARE_BUTTONS_CONFIG } from '../../src/public-api';\n// import { ShareButtonsModule } from '../../buttons/src/public_api';\n// Uncomment the following in development mode\nimport { ShareButtonsConfig, SHARE_BUTTONS_CONFIG } from 'ngx-sharebuttons';\nimport { ShareButtonsModule } from 'ngx-sharebuttons/buttons';\n\nimport { ShareButtonsPopup } from './share-buttons-popup';\nimport { SharePopupService } from './share-popup.service';\nimport { SharePopupButtonsDirective } from './share-popup-buttons.directive';\nimport { SharePopupComponent } from './share-popup.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  declarations: [\n    ShareButtonsPopup,\n    SharePopupButtonsDirective,\n    SharePopupComponent\n  ],\n  imports: [\n    CommonModule,\n    ShareButtonsModule,\n    FontAwesomeModule\n  ],\n  exports: [\n    ShareButtonsModule,\n    ShareButtonsPopup,\n    SharePopupButtonsDirective,\n    SharePopupComponent\n  ],\n  providers: [\n    SharePopupService\n  ]\n})\nexport class ShareButtonsPopupModule {\n  static withConfig(config?: ShareButtonsConfig): ModuleWithProviders<ShareButtonsModule> {\n    return {\n      ngModule: ShareButtonsModule,\n      providers: [{provide: SHARE_BUTTONS_CONFIG, useValue: config}]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {SHARE_POPUP_OPTIONS as ɵb,SharePopupOptions as ɵa} from './share-buttons-popup.model';\nexport {SharePopupButtonsDirective as ɵc} from './share-popup-buttons.directive';\nexport {SharePopupComponent as ɵe} from './share-popup.component';\nexport {SharePopupService as ɵd} from './share-popup.service';"]}