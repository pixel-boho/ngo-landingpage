/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, InjectionToken } from '@angular/core';
/**
 * @template T
 */
import * as ɵngcc0 from '@angular/core';
var ModalOptions = /** @class */ (function () {
    function ModalOptions() {
    }
ModalOptions.ɵfac = function ModalOptions_Factory(t) { return new (t || ModalOptions)(); };
ModalOptions.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ModalOptions, factory: function (t) { return ModalOptions.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ModalOptions, [{
        type: Injectable
    }], function () { return []; }, null); })();
    return ModalOptions;
}());
export { ModalOptions };
if (false) {
    /**
     *  Allow user to ID for the modal. Otherwise, a unique number will be given
     * @type {?}
     */
    ModalOptions.prototype.id;
    /**
     *  Includes a modal-backdrop element. Alternatively,
     *  specify static for a backdrop which doesn't close the modal on click.
     * @type {?}
     */
    ModalOptions.prototype.backdrop;
    /**
     * Closes the modal when escape key is pressed.
     * @type {?}
     */
    ModalOptions.prototype.keyboard;
    /** @type {?} */
    ModalOptions.prototype.focus;
    /**
     * Shows the modal when initialized.
     * @type {?}
     */
    ModalOptions.prototype.show;
    /**
     * Ignore the backdrop click
     * @type {?}
     */
    ModalOptions.prototype.ignoreBackdropClick;
    /**
     * Css class for opened modal
     * @type {?}
     */
    ModalOptions.prototype.class;
    /**
     * Toggle animation
     * @type {?}
     */
    ModalOptions.prototype.animated;
    /**
     * Modal data
     * @type {?}
     */
    ModalOptions.prototype.initialState;
    /**
     * Modal providers
     * @type {?}
     */
    ModalOptions.prototype.providers;
    /**
     * aria-labelledby attribute value to set on the modal window
     * @type {?}
     */
    ModalOptions.prototype.ariaLabelledBy;
    /**
     * aria-describedby attribute value to set on the modal window
     * @type {?}
     */
    ModalOptions.prototype.ariaDescribedby;
}
/** @type {?} */
export var modalConfigDefaults = {
    backdrop: true,
    keyboard: true,
    focus: true,
    show: false,
    ignoreBackdropClick: false,
    class: '',
    animated: true,
    initialState: {}
};
/** @type {?} */
export var MODAL_CONFIG_DEFAULT_OVERRIDE = new InjectionToken('override-default-config');
/** @type {?} */
export var CLASS_NAME = {
    SCROLLBAR_MEASURER: 'modal-scrollbar-measure',
    BACKDROP: 'modal-backdrop',
    OPEN: 'modal-open',
    FADE: 'fade',
    IN: 'in',
    // bs3
    SHOW: 'show' // bs4
};
/** @type {?} */
export var SELECTOR = {
    DIALOG: '.modal-dialog',
    DATA_TOGGLE: '[data-toggle="modal"]',
    DATA_DISMISS: '[data-dismiss="modal"]',
    FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'
};
/** @type {?} */
export var TRANSITION_DURATIONS = {
    MODAL: 300,
    BACKDROP: 150
};
/** @type {?} */
export var DISMISS_REASONS = {
    BACKRDOP: 'backdrop-click',
    ESC: 'esc',
    BACK: 'browser-back-navigation-clicked'
};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtb3B0aW9ucy5jbGFzcy5qcyIsInNvdXJjZXMiOlsibmc6L25neC1ib290c3RyYXAvbW9kYWwvbW9kYWwtb3B0aW9ucy5jbGFzcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBa0IsY0FBYyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNFO0FBQUk7QUFBZTs7QUFFbkI7QUFDa0MsSUFEbEM7QUFDWSxJQWdEWixDQUFDO2dEQWpEQSxVQUFVOzs7O2dEQUNMO0FBQUMsSUFnRFAsbUJBQUM7QUFFRCxDQUZDLEFBakRELElBaURDO0FBQ0QsU0FqRGEsWUFBWTtBQUFJO0FBQzNCO0FBQ0U7QUFFSjtBQUNFO0FBQ0UsSUFGRiwwQkFBWTtBQUNkO0FBQ0U7QUFDRTtBQUVKO0FBQWlCO0FBQVEsSUFBdkIsZ0NBQThCO0FBQ2hDO0FBQ0U7QUFDRTtBQUNXO0FBRWYsSUFGRSxnQ0FBbUI7QUFDckI7QUFFQyxJQURDLDZCQUFnQjtBQUNsQjtBQUNFO0FBQ0U7QUFDVztBQUNWLElBREgsNEJBQWU7QUFDakI7QUFDRTtBQUNFO0FBQ1c7QUFBUSxJQUFyQiwyQ0FBOEI7QUFDaEM7QUFDRTtBQUNFO0FBQ1c7QUFDVixJQURILDZCQUFlO0FBQ2pCO0FBQ0U7QUFDRTtBQUNXO0FBQ2QsSUFEQyxnQ0FBbUI7QUFDckI7QUFDRTtBQUNFO0FBQ1c7QUFBUSxJQUFyQixvQ0FBMEI7QUFDNUI7QUFDRTtBQUNFO0FBQ1c7QUFBUSxJQUFyQixpQ0FBNkI7QUFDL0I7QUFDRTtBQUNFO0FBQ1c7QUFBUSxJQUFyQixzQ0FBd0I7QUFDMUI7QUFDRTtBQUNFO0FBQ1c7QUFBUSxJQUFyQix1Q0FBeUI7QUFDM0I7QUFDQTtBQUNBLE1BQU0sS0FBTyxtQkFBbUIsR0FBaUI7QUFDakQsSUFBRSxRQUFRLEVBQUUsSUFBSTtBQUNoQixJQUFFLFFBQVEsRUFBRSxJQUFJO0FBQ2hCLElBQUUsS0FBSyxFQUFFLElBQUk7QUFDYixJQUFFLElBQUksRUFBRSxLQUFLO0FBQ2IsSUFBRSxtQkFBbUIsRUFBRSxLQUFLO0FBQzVCLElBQUUsS0FBSyxFQUFFLEVBQUU7QUFDWCxJQUFFLFFBQVEsRUFBRSxJQUFJO0FBQ2hCLElBQUUsWUFBWSxFQUFFLEVBQUU7QUFDbEIsQ0FBQztBQUNEO0FBQ0EsTUFBTSxLQUFPLDZCQUE2QixHQUN4QyxJQUFJLGNBQWMsQ0FBZSx5QkFBeUIsQ0FBQztBQUM3RDtBQUNBLE1BQU0sS0FBTyxVQUFVLEdBQWM7QUFDckMsSUFBRSxrQkFBa0IsRUFBRSx5QkFBeUI7QUFDL0MsSUFBRSxRQUFRLEVBQUUsZ0JBQWdCO0FBQzVCLElBQUUsSUFBSSxFQUFFLFlBQVk7QUFDcEIsSUFBRSxJQUFJLEVBQUUsTUFBTTtBQUNkLElBQUUsRUFBRSxFQUFFLElBQUk7QUFBRTtBQUNSLElBQUYsSUFBSSxFQUFFLE1BQU0sQ0FBQyxNQUFNO0FBQ3JCLENBQUM7QUFDRDtBQUNBLE1BQU0sS0FBTyxRQUFRLEdBQWE7QUFDbEMsSUFBRSxNQUFNLEVBQUUsZUFBZTtBQUN6QixJQUFFLFdBQVcsRUFBRSx1QkFBdUI7QUFDdEMsSUFBRSxZQUFZLEVBQUUsd0JBQXdCO0FBQ3hDLElBQUUsYUFBYSxFQUFFLG9EQUFvRDtBQUNyRSxDQUFDO0FBQ0Q7QUFDQSxNQUFNLEtBQU8sb0JBQW9CLEdBQXdCO0FBQ3pELElBQUUsS0FBSyxFQUFFLEdBQUc7QUFDWixJQUFFLFFBQVEsRUFBRSxHQUFHO0FBQ2YsQ0FBQztBQUNEO0FBQ0EsTUFBTSxLQUFPLGVBQWUsR0FBbUI7QUFDL0MsSUFBRSxRQUFRLEVBQUUsZ0JBQWdCO0FBQzVCLElBQUUsR0FBRyxFQUFFLEtBQUs7QUFDWixJQUFFLElBQUksRUFBRSxpQ0FBaUM7QUFDekMsQ0FBQztBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgU3RhdGljUHJvdmlkZXIsIEluamVjdGlvblRva2VuIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDbGFzc05hbWUsIERpc21pc3NSZWFzb25zLCBTZWxlY3RvciwgVHJhbnNpdGlvbkR1cmF0aW9ucyB9IGZyb20gJy4vbW9kZWxzJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE1vZGFsT3B0aW9uczxUID0gT2JqZWN0PiB7XG4gIC8qKlxuICAgKiAgQWxsb3cgdXNlciB0byBJRCBmb3IgdGhlIG1vZGFsLiBPdGhlcndpc2UsIGEgdW5pcXVlIG51bWJlciB3aWxsIGJlIGdpdmVuXG4gICAqL1xuICBpZD86IG51bWJlcjtcbiAgLyoqXG4gICAqICBJbmNsdWRlcyBhIG1vZGFsLWJhY2tkcm9wIGVsZW1lbnQuIEFsdGVybmF0aXZlbHksXG4gICAqICBzcGVjaWZ5IHN0YXRpYyBmb3IgYSBiYWNrZHJvcCB3aGljaCBkb2Vzbid0IGNsb3NlIHRoZSBtb2RhbCBvbiBjbGljay5cbiAgICovXG4gIGJhY2tkcm9wPzogYm9vbGVhbiB8ICdzdGF0aWMnO1xuICAvKipcbiAgICogQ2xvc2VzIHRoZSBtb2RhbCB3aGVuIGVzY2FwZSBrZXkgaXMgcHJlc3NlZC5cbiAgICovXG4gIGtleWJvYXJkPzogYm9vbGVhbjtcblxuICBmb2N1cz86IGJvb2xlYW47XG4gIC8qKlxuICAgKiBTaG93cyB0aGUgbW9kYWwgd2hlbiBpbml0aWFsaXplZC5cbiAgICovXG4gIHNob3c/OiBib29sZWFuO1xuICAvKipcbiAgICogSWdub3JlIHRoZSBiYWNrZHJvcCBjbGlja1xuICAgKi9cbiAgaWdub3JlQmFja2Ryb3BDbGljaz86IGJvb2xlYW47XG4gIC8qKlxuICAgKiBDc3MgY2xhc3MgZm9yIG9wZW5lZCBtb2RhbFxuICAgKi9cbiAgY2xhc3M/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBUb2dnbGUgYW5pbWF0aW9uXG4gICAqL1xuICBhbmltYXRlZD86IGJvb2xlYW47XG4gIC8qKlxuICAgKiBNb2RhbCBkYXRhXG4gICAqL1xuICBpbml0aWFsU3RhdGU/OiBQYXJ0aWFsPFQ+O1xuICAvKipcbiAgICogTW9kYWwgcHJvdmlkZXJzXG4gICAqL1xuICBwcm92aWRlcnM/OiBTdGF0aWNQcm92aWRlcltdO1xuICAvKipcbiAgICogYXJpYS1sYWJlbGxlZGJ5IGF0dHJpYnV0ZSB2YWx1ZSB0byBzZXQgb24gdGhlIG1vZGFsIHdpbmRvd1xuICAgKi9cbiAgYXJpYUxhYmVsbGVkQnk/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBhcmlhLWRlc2NyaWJlZGJ5IGF0dHJpYnV0ZSB2YWx1ZSB0byBzZXQgb24gdGhlIG1vZGFsIHdpbmRvd1xuICAgKi9cbiAgYXJpYURlc2NyaWJlZGJ5Pzogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgbW9kYWxDb25maWdEZWZhdWx0czogTW9kYWxPcHRpb25zID0ge1xuICBiYWNrZHJvcDogdHJ1ZSxcbiAga2V5Ym9hcmQ6IHRydWUsXG4gIGZvY3VzOiB0cnVlLFxuICBzaG93OiBmYWxzZSxcbiAgaWdub3JlQmFja2Ryb3BDbGljazogZmFsc2UsXG4gIGNsYXNzOiAnJyxcbiAgYW5pbWF0ZWQ6IHRydWUsXG4gIGluaXRpYWxTdGF0ZToge31cbn07XG5cbmV4cG9ydCBjb25zdCBNT0RBTF9DT05GSUdfREVGQVVMVF9PVkVSUklERTogSW5qZWN0aW9uVG9rZW48TW9kYWxPcHRpb25zPiA9XG4gIG5ldyBJbmplY3Rpb25Ub2tlbjxNb2RhbE9wdGlvbnM+KCdvdmVycmlkZS1kZWZhdWx0LWNvbmZpZycpO1xuXG5leHBvcnQgY29uc3QgQ0xBU1NfTkFNRTogQ2xhc3NOYW1lID0ge1xuICBTQ1JPTExCQVJfTUVBU1VSRVI6ICdtb2RhbC1zY3JvbGxiYXItbWVhc3VyZScsXG4gIEJBQ0tEUk9QOiAnbW9kYWwtYmFja2Ryb3AnLFxuICBPUEVOOiAnbW9kYWwtb3BlbicsXG4gIEZBREU6ICdmYWRlJyxcbiAgSU46ICdpbicsIC8vIGJzM1xuICBTSE9XOiAnc2hvdycgLy8gYnM0XG59O1xuXG5leHBvcnQgY29uc3QgU0VMRUNUT1I6IFNlbGVjdG9yID0ge1xuICBESUFMT0c6ICcubW9kYWwtZGlhbG9nJyxcbiAgREFUQV9UT0dHTEU6ICdbZGF0YS10b2dnbGU9XCJtb2RhbFwiXScsXG4gIERBVEFfRElTTUlTUzogJ1tkYXRhLWRpc21pc3M9XCJtb2RhbFwiXScsXG4gIEZJWEVEX0NPTlRFTlQ6ICcubmF2YmFyLWZpeGVkLXRvcCwgLm5hdmJhci1maXhlZC1ib3R0b20sIC5pcy1maXhlZCdcbn07XG5cbmV4cG9ydCBjb25zdCBUUkFOU0lUSU9OX0RVUkFUSU9OUzogVHJhbnNpdGlvbkR1cmF0aW9ucyA9IHtcbiAgTU9EQUw6IDMwMCxcbiAgQkFDS0RST1A6IDE1MFxufTtcblxuZXhwb3J0IGNvbnN0IERJU01JU1NfUkVBU09OUzogRGlzbWlzc1JlYXNvbnMgPSB7XG4gIEJBQ0tSRE9QOiAnYmFja2Ryb3AtY2xpY2snLFxuICBFU0M6ICdlc2MnLFxuICBCQUNLOiAnYnJvd3Nlci1iYWNrLW5hdmlnYXRpb24tY2xpY2tlZCdcbn07XG4iXX0=