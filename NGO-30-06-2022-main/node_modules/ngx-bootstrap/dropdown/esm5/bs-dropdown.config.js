/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Default dropdown configuration
 */
import * as ɵngcc0 from '@angular/core';
var BsDropdownConfig = /** @class */ (function () {
    function BsDropdownConfig() {
        /**
         * default dropdown auto closing behavior
         */
        this.autoClose = true;
        /**
         * default dropdown auto closing behavior
         */
        this.insideClick = false;
        /**
         * turn on/off animation
         */
        this.isAnimated = false;
    }
    /** @nocollapse */ BsDropdownConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function BsDropdownConfig_Factory() { return new BsDropdownConfig(); }, token: BsDropdownConfig, providedIn: "root" });
BsDropdownConfig.ɵfac = function BsDropdownConfig_Factory(t) { return new (t || BsDropdownConfig)(); };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BsDropdownConfig, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
    return BsDropdownConfig;
}());
export { BsDropdownConfig };
if (false) {
    /**
     * default dropdown auto closing behavior
     * @type {?}
     */
    BsDropdownConfig.prototype.autoClose;
    /**
     * default dropdown auto closing behavior
     * @type {?}
     */
    BsDropdownConfig.prototype.insideClick;
    /**
     * turn on/off animation
     * @type {?}
     */
    BsDropdownConfig.prototype.isAnimated;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnMtZHJvcGRvd24uY29uZmlnLmpzIiwic291cmNlcyI6WyJuZzovbmd4LWJvb3RzdHJhcC9kcm9wZG93bi9icy1kcm9wZG93bi5jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0M7QUFDb0M7QUFDbEM7QUFFRDs7QUFGRDtBQUdjLElBSGQ7QUFDZ0I7QUFFWjtBQUNrQjtBQUFZLFFBQ2hDLGNBQVMsR0FBRyxJQUFJLENBQUM7QUFDbkI7QUFBWTtBQUNFO0FBQ1gsUUFERCxnQkFBVyxHQUFHLEtBQUssQ0FBQztBQUN0QjtBQUFZO0FBQ0U7QUFFWixRQUZBLGVBQVUsR0FBRyxLQUFLLENBQUM7QUFDckIsS0FBQyxBQVBRO29EQUhSLFVBQVUsU0FBQyxzQkFDVixVQUFVLEVBQUUsTUFBTSxrQkFDbkIsaklBQ1M7Ozs7Ozs7Z0RBTUY7QUFBQywyQkFaVDtBQUFFLENBYUQsQUFWRCxJQVVDO0FBQ0QsU0FSYSxnQkFBZ0I7QUFDNUI7QUFBYTtBQUFRO0FBRXRCO0FBQWlCO0FBQVEsSUFEdkIscUNBQWlCO0FBQ25CO0FBQVE7QUFDRjtBQUNOO0FBQVEsSUFETix1Q0FBb0I7QUFDdEI7QUFBUTtBQUNGO0FBQ0w7QUFDTSxJQUZMLHNDQUFtQjtBQUNyQjtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKiogRGVmYXVsdCBkcm9wZG93biBjb25maWd1cmF0aW9uICovXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBCc0Ryb3Bkb3duQ29uZmlnIHtcbiAgLyoqIGRlZmF1bHQgZHJvcGRvd24gYXV0byBjbG9zaW5nIGJlaGF2aW9yICovXG4gIGF1dG9DbG9zZSA9IHRydWU7XG4gIC8qKiBkZWZhdWx0IGRyb3Bkb3duIGF1dG8gY2xvc2luZyBiZWhhdmlvciAqL1xuICBpbnNpZGVDbGljayA9IGZhbHNlO1xuICAvKiogdHVybiBvbi9vZmYgYW5pbWF0aW9uICovXG4gIGlzQW5pbWF0ZWQgPSBmYWxzZTtcbn1cbiJdfQ==