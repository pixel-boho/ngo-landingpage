/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// todo: split
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Provides default values for Pagination and pager components
 */
import * as ɵngcc0 from '@angular/core';
var PaginationConfig = /** @class */ (function () {
    function PaginationConfig() {
        this.main = {
            maxSize: void 0,
            itemsPerPage: 10,
            boundaryLinks: false,
            directionLinks: true,
            firstText: 'First',
            previousText: 'Previous',
            nextText: 'Next',
            lastText: 'Last',
            pageBtnClass: '',
            rotate: true
        };
        this.pager = {
            itemsPerPage: 15,
            previousText: '« Previous',
            nextText: 'Next »',
            pageBtnClass: '',
            align: true
        };
    }
    /** @nocollapse */ PaginationConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function PaginationConfig_Factory() { return new PaginationConfig(); }, token: PaginationConfig, providedIn: "root" });
PaginationConfig.ɵfac = function PaginationConfig_Factory(t) { return new (t || PaginationConfig)(); };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PaginationConfig, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
    return PaginationConfig;
}());
export { PaginationConfig };
if (false) {
    /** @type {?} */
    PaginationConfig.prototype.main;
    /** @type {?} */
    PaginationConfig.prototype.pager;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnaW5hdGlvbi5jb25maWcuanMiLCJzb3VyY2VzIjpbIm5nOi9uZ3gtYm9vdHN0cmFwL3BhZ2luYXRpb24vcGFnaW5hdGlvbi5jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDO0FBQ29DO0FBQUk7QUFFVTs7QUFDbEQ7QUFHYyxJQUhkO0FBQ2dCLFFBR2QsU0FBSSxHQUFnQjtBQUN0QixZQUFJLE9BQU8sRUFBRSxLQUFLLENBQUM7QUFDbkIsWUFBSSxZQUFZLEVBQUUsRUFBRTtBQUNwQixZQUFJLGFBQWEsRUFBRSxLQUFLO0FBQ3hCLFlBQUksY0FBYyxFQUFFLElBQUk7QUFDeEIsWUFBSSxTQUFTLEVBQUUsT0FBTztBQUN0QixZQUFJLFlBQVksRUFBRSxVQUFVO0FBQzVCLFlBQUksUUFBUSxFQUFFLE1BQU07QUFDcEIsWUFBSSxRQUFRLEVBQUUsTUFBTTtBQUNwQixZQUFJLFlBQVksRUFBRSxFQUFFO0FBQ3BCLFlBQUksTUFBTSxFQUFFLElBQUk7QUFDaEIsU0FBRyxDQUFDO0FBQ0osUUFBRSxVQUFLLEdBQWU7QUFDdEIsWUFBSSxZQUFZLEVBQUUsRUFBRTtBQUNwQixZQUFJLFlBQVksRUFBRSxZQUFZO0FBQzlCLFlBQUksUUFBUSxFQUFFLFFBQVE7QUFDdEIsWUFBSSxZQUFZLEVBQUUsRUFBRTtBQUNwQixZQUFJLEtBQUssRUFBRSxJQUFJO0FBQ2YsU0FBRyxDQUFDO0FBQ0osS0FBQyxBQXBCUTtvREFIUixVQUFVLFNBQUMsc0JBQ1YsVUFBVSxFQUFFLE1BQU0sa0JBQ25CLGpJQUNTOzs7Ozs7O2dEQVFMO0FBQUMsMkJBakJOO0FBQUUsQ0E2QkQsQUF2QkQsSUF1QkM7QUFDRCxTQXJCYSxnQkFBZ0I7QUFDNUI7QUFBYTtBQUNILElBRFQsZ0NBV0U7QUFDSjtBQUFxQixJQUFuQixpQ0FNRTtBQUNKO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0b2RvOiBzcGxpdFxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBDb25maWdNb2RlbCwgUGFnZXJNb2RlbCB9IGZyb20gJy4vbW9kZWxzJztcblxuLyoqIFByb3ZpZGVzIGRlZmF1bHQgdmFsdWVzIGZvciBQYWdpbmF0aW9uIGFuZCBwYWdlciBjb21wb25lbnRzICovXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBQYWdpbmF0aW9uQ29uZmlnIHtcbiAgbWFpbjogQ29uZmlnTW9kZWwgPSB7XG4gICAgbWF4U2l6ZTogdm9pZCAwLFxuICAgIGl0ZW1zUGVyUGFnZTogMTAsXG4gICAgYm91bmRhcnlMaW5rczogZmFsc2UsXG4gICAgZGlyZWN0aW9uTGlua3M6IHRydWUsXG4gICAgZmlyc3RUZXh0OiAnRmlyc3QnLFxuICAgIHByZXZpb3VzVGV4dDogJ1ByZXZpb3VzJyxcbiAgICBuZXh0VGV4dDogJ05leHQnLFxuICAgIGxhc3RUZXh0OiAnTGFzdCcsXG4gICAgcGFnZUJ0bkNsYXNzOiAnJyxcbiAgICByb3RhdGU6IHRydWVcbiAgfTtcbiAgcGFnZXI6IFBhZ2VyTW9kZWwgPSB7XG4gICAgaXRlbXNQZXJQYWdlOiAxNSxcbiAgICBwcmV2aW91c1RleHQ6ICfCqyBQcmV2aW91cycsXG4gICAgbmV4dFRleHQ6ICdOZXh0IMK7JyxcbiAgICBwYWdlQnRuQ2xhc3M6ICcnLFxuICAgIGFsaWduOiB0cnVlXG4gIH07XG59XG4iXX0=