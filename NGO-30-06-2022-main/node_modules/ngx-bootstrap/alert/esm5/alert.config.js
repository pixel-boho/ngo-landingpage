/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as ɵngcc0 from '@angular/core';
var AlertConfig = /** @class */ (function () {
    function AlertConfig() {
        /**
         * default alert type
         */
        this.type = 'warning';
        /**
         * is alerts are dismissible by default
         */
        this.dismissible = false;
        /**
         * default time before alert will dismiss
         */
        this.dismissOnTimeout = undefined;
    }
    /** @nocollapse */ AlertConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function AlertConfig_Factory() { return new AlertConfig(); }, token: AlertConfig, providedIn: "root" });
AlertConfig.ɵfac = function AlertConfig_Factory(t) { return new (t || AlertConfig)(); };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AlertConfig, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
    return AlertConfig;
}());
export { AlertConfig };
if (false) {
    /**
     * default alert type
     * @type {?}
     */
    AlertConfig.prototype.type;
    /**
     * is alerts are dismissible by default
     * @type {?}
     */
    AlertConfig.prototype.dismissible;
    /**
     * default time before alert will dismiss
     * @type {?}
     */
    AlertConfig.prototype.dismissOnTimeout;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxlcnQuY29uZmlnLmpzIiwic291cmNlcyI6WyJuZzovbmd4LWJvb3RzdHJhcC9hbGVydC9hbGVydC5jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0M7O0FBQ0E7QUFHUyxJQUhUO0FBQ1c7QUFDVDtBQUVBO0FBQVksUUFDWixTQUFJLEdBQUcsU0FBUyxDQUFDO0FBQ25CO0FBQ1c7QUFDRTtBQUVaLFFBRkMsZ0JBQVcsR0FBRyxLQUFLLENBQUM7QUFDdEI7QUFDVztBQUNFO0FBQVksUUFBdkIscUJBQWdCLEdBQVksU0FBUyxDQUFDO0FBQ3hDLEtBQUMsQUFUUTsrQ0FIUixVQUFVLFNBQUMsc0JBQ1YsVUFBVSxFQUFFLE1BQU0sa0JBQ25CLDVIQUNTOzs7Ozs7O2dEQU9rQztBQUFDLHNCQVo3QztBQUFFLENBY0QsQUFaRCxJQVlDO0FBQ0QsU0FWYSxXQUFXO0FBQ3ZCO0FBQWE7QUFBUTtBQUV0QjtBQUNnQjtBQUFRLElBRnRCLDJCQUFpQjtBQUNuQjtBQUNPO0FBQ0Y7QUFBaUI7QUFFaEIsSUFGSixrQ0FBb0I7QUFDdEI7QUFDTztBQUNGO0FBQWlCO0FBQVEsSUFBNUIsdUNBQXNDO0FBQ3hDO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIEFsZXJ0Q29uZmlnIHtcbiAgLyoqIGRlZmF1bHQgYWxlcnQgdHlwZSAqL1xuICB0eXBlID0gJ3dhcm5pbmcnO1xuXG4gIC8qKiBpcyBhbGVydHMgYXJlIGRpc21pc3NpYmxlIGJ5IGRlZmF1bHQgKi9cbiAgZGlzbWlzc2libGUgPSBmYWxzZTtcblxuICAvKiogZGVmYXVsdCB0aW1lIGJlZm9yZSBhbGVydCB3aWxsIGRpc21pc3MgKi9cbiAgZGlzbWlzc09uVGltZW91dD86IG51bWJlciA9IHVuZGVmaW5lZDtcbn1cbiJdfQ==