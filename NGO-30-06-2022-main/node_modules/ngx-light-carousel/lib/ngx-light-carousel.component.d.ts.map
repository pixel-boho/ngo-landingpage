{"version":3,"file":"ngx-light-carousel.component.d.ts","sources":["ngx-light-carousel.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, OnInit, QueryList, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { ngxLightAutoplay, ngxLightOptions } from './ngx-light-carousel.model';\nexport declare class NgxCarouselComponent implements AfterViewInit, OnChanges, OnInit, OnDestroy {\n    private platformId;\n    private _renderer;\n    private zone;\n    sliderElement: ElementRef;\n    btnPrevElement: ElementRef;\n    btnNextElement: ElementRef;\n    progressContainerElement: ElementRef;\n    carouselItems: QueryList<ElementRef>;\n    contentPrev: TemplateRef<any>;\n    contentNext: TemplateRef<any>;\n    dotElm: TemplateRef<any>;\n    progressElm: TemplateRef<any>;\n    infiniteContainer: ViewContainerRef;\n    contentContent: TemplateRef<any>;\n    current: number;\n    currentChange: EventEmitter<number>;\n    data: any[];\n    options: ngxLightOptions;\n    private infiniteElmRefs;\n    private timeLeft;\n    private interval;\n    private actionDelay;\n    dots: number[];\n    dotsLoading: boolean;\n    loading: boolean;\n    grabbing: boolean;\n    throttleSub: Observable<any>;\n    subRef: Subscription;\n    arrowsVisible: boolean;\n    carouselItemWidthVar: number;\n    initialized: boolean;\n    constructor(platformId: Object, _renderer: Renderer2, zone: NgZone);\n    click(fn: any): void;\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngOnChanges(): void;\n    ngOnDestroy(): void;\n    onResize(): void;\n    sufficientSlides(): boolean;\n    showArrows(state: boolean): void;\n    rootElmWidth(): any;\n    carouselItemWidth(): number;\n    currentBreakpoint(): import(\"./ngx-light-carousel.model\").ngxLightBreakpoint;\n    elements(): {\n        rootElement: any;\n        containerElement: HTMLElement;\n        carouselItems: any[];\n    };\n    private setViewWidth;\n    hover(): void;\n    unhover(): void;\n    private calculateDots;\n    addPanningClass: () => void;\n    removePanningClass: () => void;\n    addAnimationClass: () => void;\n    removeAnimationClass: () => void;\n    panTo: (value: number) => void;\n    currentIndex: (number?: number) => number;\n    slowOnOutOfBounds: (e: any) => any;\n    scrollBackToEdge: () => void;\n    outOfBound: () => boolean;\n    detectSwipingLeft: (e: any) => boolean;\n    detectSwipingRight: (e: any) => boolean;\n    detectPanningLeft: (e: any) => boolean;\n    detectPanningRight: (e: any) => boolean;\n    visibleElements(): number;\n    nextSlide: () => void;\n    prevSlide: () => void;\n    addInfiniteElm(): void;\n    private infiniteHandler;\n    startTimer: () => void;\n    pauseTimer: () => void;\n    scrollToIndex(number: any): void;\n    goToIndex: (number: any) => void;\n    infiniteMode(): boolean;\n    autoplayMode(): false | ngxLightAutoplay;\n    calculateMoved: (e: any) => number;\n    moveIndex(move: number): number;\n    init(): void;\n}\n"]}