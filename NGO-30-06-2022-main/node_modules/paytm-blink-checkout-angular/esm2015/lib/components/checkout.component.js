import { CheckoutService } from './../services/checkout.service';
import { Component } from '@angular/core';
import CONSTANTS from '../constants';
import * as ɵngcc0 from '@angular/core';
export class CheckoutComponent {
    constructor(checkoutService) {
        this.checkoutService = checkoutService;
    }
    ngAfterViewInit() {
        this.subs = this.checkoutService
            .checkoutJsInstance$
            .subscribe(this.invoke);
    }
    invoke(checkoutJsInstance) {
        if (checkoutJsInstance && checkoutJsInstance.invoke) {
            try {
                checkoutJsInstance.invoke();
            }
            catch (error) {
                console.error(CONSTANTS.ERRORS.INVOKE, error);
            }
        }
    }
    ngOnDestroy() {
        if (this.subs) {
            this.subs.unsubscribe();
        }
    }
}
CheckoutComponent.ɵfac = function CheckoutComponent_Factory(t) { return new (t || CheckoutComponent)(ɵngcc0.ɵɵdirectiveInject(CheckoutService)); };
CheckoutComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CheckoutComponent, selectors: [["paytm-checkout"]], decls: 2, vars: 1, consts: [[3, "id"]], template: function CheckoutComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelement(1, "div");
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("id", ctx.checkoutService.checkoutJsContainerId);
    } }, encapsulation: 2 });
/** @nocollapse */
CheckoutComponent.ctorParameters = () => [
    { type: CheckoutService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CheckoutComponent, [{
        type: Component,
        args: [{
                selector: 'paytm-checkout',
                template: `<div [id]="checkoutService.checkoutJsContainerId"><div>`
            }]
    }], function () { return [{ type: CheckoutService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tvdXQuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJuZzovcGF5dG0tYmxpbmstY2hlY2tvdXQtYW5ndWxhci9saWIvY29tcG9uZW50cy9jaGVja291dC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxTQUFTLEVBQTRCLE1BQU0sZUFBZSxDQUFDO0FBRXBFLE9BQU8sU0FBUyxNQUFNLGNBQWMsQ0FBQzs7QUFNckMsTUFBTSxPQUFPLGlCQUFpQjtBQUFHLElBRy9CLFlBQXFCLGVBQWdDO0FBQUksUUFBcEMsb0JBQWUsR0FBZixlQUFlLENBQWlCO0FBQUMsSUFBRSxDQUFDO0FBQzNELElBQ0UsZUFBZTtBQUFLLFFBQ2xCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLGVBQWU7QUFDcEMsYUFBTyxtQkFBbUI7QUFDMUIsYUFBTyxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQzlCLElBQUUsQ0FBQztBQUNILElBQ0UsTUFBTSxDQUFDLGtCQUFrQjtBQUFJLFFBQzNCLElBQUksa0JBQWtCLElBQUksa0JBQWtCLENBQUMsTUFBTSxFQUFFO0FBQ3pELFlBQU0sSUFBSTtBQUNWLGdCQUFRLGtCQUFrQixDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQ3BDLGFBQU87QUFBQyxZQUFBLE9BQU8sS0FBSyxFQUFFO0FBQ3RCLGdCQUFRLE9BQU8sQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDdEQsYUFBTztBQUNQLFNBQUs7QUFDTCxJQUFFLENBQUM7QUFDSCxJQUNFLFdBQVc7QUFBSyxRQUNkLElBQUksSUFBSSxDQUFDLElBQUksRUFBRTtBQUNuQixZQUFNLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7QUFDOUIsU0FBSztBQUNMLElBQUUsQ0FBQztBQUNIOzZDQTlCQyxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLGdCQUFnQixrQkFDMUIsUUFBUSxFQUFFOzRDQUF5RCxjQUNwRTs7Ozs7OzZCQUNHO0FBQUM7QUFBbUI7QUFBMkMsWUFUMUQsZUFBZTtBQUFHOzs7Ozs7O3lFQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGVja291dFNlcnZpY2UgfSBmcm9tICcuLy4uL3NlcnZpY2VzL2NoZWNrb3V0LnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBPbkRlc3Ryb3ksIEFmdGVyVmlld0luaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IENPTlNUQU5UUyBmcm9tICcuLi9jb25zdGFudHMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwYXl0bS1jaGVja291dCcsXG4gIHRlbXBsYXRlOiBgPGRpdiBbaWRdPVwiY2hlY2tvdXRTZXJ2aWNlLmNoZWNrb3V0SnNDb250YWluZXJJZFwiPjxkaXY+YCxcbn0pXG5leHBvcnQgY2xhc3MgQ2hlY2tvdXRDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kge1xuICBwcml2YXRlIHN1YnM6IFN1YnNjcmlwdGlvbjtcblxuICBjb25zdHJ1Y3RvcihyZWFkb25seSBjaGVja291dFNlcnZpY2U6IENoZWNrb3V0U2VydmljZSkge31cblxuICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XG4gICAgdGhpcy5zdWJzID0gdGhpcy5jaGVja291dFNlcnZpY2VcbiAgICAgIC5jaGVja291dEpzSW5zdGFuY2UkXG4gICAgICAuc3Vic2NyaWJlKHRoaXMuaW52b2tlKTtcbiAgfVxuXG4gIGludm9rZShjaGVja291dEpzSW5zdGFuY2UpOiB2b2lkIHtcbiAgICBpZiAoY2hlY2tvdXRKc0luc3RhbmNlICYmIGNoZWNrb3V0SnNJbnN0YW5jZS5pbnZva2UpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNoZWNrb3V0SnNJbnN0YW5jZS5pbnZva2UoKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoQ09OU1RBTlRTLkVSUk9SUy5JTlZPS0UsIGVycm9yKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5zdWJzKSB7XG4gICAgICB0aGlzLnN1YnMudW5zdWJzY3JpYmUoKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==