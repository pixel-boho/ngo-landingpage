import CONSTANTS from "../constants";
export class ICheckoutOptions {
}
export class CheckoutOptions {
    constructor(env, openInPopup, checkoutJsInstance) {
        this.env = env;
        this.openInPopup = openInPopup;
        this.checkoutJsInstance = checkoutJsInstance;
    }
    static from(options) {
        options = options || {};
        const env = options.env || CONSTANTS.ENV.PROD;
        const openInPopup = typeof options.openInPopup === 'boolean' ? options.openInPopup : true;
        return new CheckoutOptions(env, openInPopup, options.checkoutJsInstance);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9wYXl0bS1ibGluay1jaGVja291dC1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL21vZGVscy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLFNBQVMsTUFBTSxjQUFjLENBQUM7QUFzQnJDLE1BQU0sT0FBTyxnQkFBZ0I7Q0FJNUI7QUFFRCxNQUFNLE9BQU8sZUFBZTtJQUN4QixZQUNXLEdBQVEsRUFDUixXQUFxQixFQUNyQixrQkFBc0M7UUFGdEMsUUFBRyxHQUFILEdBQUcsQ0FBSztRQUNSLGdCQUFXLEdBQVgsV0FBVyxDQUFVO1FBQ3JCLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7SUFFakQsQ0FBQztJQUVELE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBMEI7UUFDbEMsT0FBTyxHQUFHLE9BQU8sSUFBSSxFQUFFLENBQUM7UUFDeEIsTUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLEdBQUcsSUFBUyxTQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQztRQUNuRCxNQUFNLFdBQVcsR0FBRyxPQUFPLE9BQU8sQ0FBQyxXQUFXLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFFMUYsT0FBTyxJQUFJLGVBQWUsQ0FDdEIsR0FBRyxFQUNILFdBQVcsRUFDWCxPQUFPLENBQUMsa0JBQWtCLENBQzdCLENBQUM7SUFDTixDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ09OU1RBTlRTIGZyb20gXCIuLi9jb25zdGFudHNcIjtcblxuaW50ZXJmYWNlIElTdHJpbmdEaWN0aW9uYXJ5IHtcbiAgICBba2V5OiBzdHJpbmddOiBzdHJpbmdcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJQ2hlY2tvdXRJbnN0YW5jZSB7XG4gICAgb25Mb2FkPzogKGZuOiBGdW5jdGlvbikgPT4gdm9pZCxcbiAgICBpbml0PzogKGNvbmZpZzogYW55KSA9PiBQcm9taXNlPGFueT4sXG4gICAgY2xvc2U/OiAoKSA9PiB2b2lkLFxuICAgIGludm9rZT86ICgpID0+IHZvaWQsXG4gICAgaW5pdExpYj86IChtZXJjaGFudElkOiBzdHJpbmcpID0+IFByb21pc2U8YW55PixcbiAgICBQQVlNT0RFPzogSVN0cmluZ0RpY3Rpb25hcnksXG4gICAgRkxPVz86IElTdHJpbmdEaWN0aW9uYXJ5LFxuICAgIFRPS0VOPzogSVN0cmluZ0RpY3Rpb25hcnksXG4gICAgREVGRVJSRURfRVZFTlRTPzogSVN0cmluZ0RpY3Rpb25hcnksXG4gICAgTk9USUZZX01FUkNIQU5UX0VWRU5UUz86IElTdHJpbmdEaWN0aW9uYXJ5XG59XG5cbmV4cG9ydCB0eXBlIEVudiA9ICdTVEFHRScgfCAnUFJPRCc7XG5cblxuZXhwb3J0IGNsYXNzIElDaGVja291dE9wdGlvbnMge1xuICAgIGVudj86IEVudjtcbiAgICBvcGVuSW5Qb3B1cD86IGJvb2xlYW47XG4gICAgY2hlY2tvdXRKc0luc3RhbmNlPzogSUNoZWNrb3V0SW5zdGFuY2U7XG59XG5cbmV4cG9ydCBjbGFzcyBDaGVja291dE9wdGlvbnMgaW1wbGVtZW50cyBJQ2hlY2tvdXRPcHRpb25ze1xuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHVibGljIGVudjogRW52LFxuICAgICAgICBwdWJsaWMgb3BlbkluUG9wdXA/OiBib29sZWFuLFxuICAgICAgICBwdWJsaWMgY2hlY2tvdXRKc0luc3RhbmNlPzogSUNoZWNrb3V0SW5zdGFuY2UsXG4gICAgKSB7XG4gICAgfVxuXG4gICAgc3RhdGljIGZyb20ob3B0aW9ucyA6IElDaGVja291dE9wdGlvbnMpOiBDaGVja291dE9wdGlvbnN7XG4gICAgICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgICAgICBjb25zdCBlbnYgPSBvcHRpb25zLmVudiB8fCA8RW52PkNPTlNUQU5UUy5FTlYuUFJPRDtcbiAgICAgICAgY29uc3Qgb3BlbkluUG9wdXAgPSB0eXBlb2Ygb3B0aW9ucy5vcGVuSW5Qb3B1cCA9PT0gJ2Jvb2xlYW4nID8gb3B0aW9ucy5vcGVuSW5Qb3B1cCA6IHRydWU7XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gbmV3IENoZWNrb3V0T3B0aW9ucyhcbiAgICAgICAgICAgIGVudixcbiAgICAgICAgICAgIG9wZW5JblBvcHVwLFxuICAgICAgICAgICAgb3B0aW9ucy5jaGVja291dEpzSW5zdGFuY2VcbiAgICAgICAgKTtcbiAgICB9XG59Il19