import { CheckoutService } from './../services/checkout.service';
import { Component } from '@angular/core';
import CONSTANTS from '../constants';
var CheckoutComponent = /** @class */ (function () {
    function CheckoutComponent(checkoutService) {
        this.checkoutService = checkoutService;
    }
    CheckoutComponent.prototype.ngAfterViewInit = function () {
        this.subs = this.checkoutService
            .checkoutJsInstance$
            .subscribe(this.invoke);
    };
    CheckoutComponent.prototype.invoke = function (checkoutJsInstance) {
        if (checkoutJsInstance && checkoutJsInstance.invoke) {
            try {
                checkoutJsInstance.invoke();
            }
            catch (error) {
                console.error(CONSTANTS.ERRORS.INVOKE, error);
            }
        }
    };
    CheckoutComponent.prototype.ngOnDestroy = function () {
        if (this.subs) {
            this.subs.unsubscribe();
        }
    };
    CheckoutComponent.decorators = [
        { type: Component, args: [{
                    selector: 'paytm-checkout',
                    template: "<div [id]=\"checkoutService.checkoutJsContainerId\"><div>"
                }] }
    ];
    /** @nocollapse */
    CheckoutComponent.ctorParameters = function () { return [
        { type: CheckoutService }
    ]; };
    return CheckoutComponent;
}());
export { CheckoutComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tvdXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vcGF5dG0tYmxpbmstY2hlY2tvdXQtYW5ndWxhci8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2NoZWNrb3V0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDakUsT0FBTyxFQUFFLFNBQVMsRUFBNEIsTUFBTSxlQUFlLENBQUM7QUFFcEUsT0FBTyxTQUFTLE1BQU0sY0FBYyxDQUFDO0FBRXJDO0lBT0UsMkJBQXFCLGVBQWdDO1FBQWhDLG9CQUFlLEdBQWYsZUFBZSxDQUFpQjtJQUFHLENBQUM7SUFFekQsMkNBQWUsR0FBZjtRQUNFLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLGVBQWU7YUFDN0IsbUJBQW1CO2FBQ25CLFNBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUVELGtDQUFNLEdBQU4sVUFBTyxrQkFBa0I7UUFDdkIsSUFBSSxrQkFBa0IsSUFBSSxrQkFBa0IsQ0FBQyxNQUFNLEVBQUU7WUFDbkQsSUFBSTtnQkFDRixrQkFBa0IsQ0FBQyxNQUFNLEVBQUUsQ0FBQzthQUM3QjtZQUFDLE9BQU8sS0FBSyxFQUFFO2dCQUNkLE9BQU8sQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7YUFDL0M7U0FDRjtJQUNILENBQUM7SUFFRCx1Q0FBVyxHQUFYO1FBQ0UsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ2IsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUN6QjtJQUNILENBQUM7O2dCQTdCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtvQkFDMUIsUUFBUSxFQUFFLDJEQUF5RDtpQkFDcEU7Ozs7Z0JBUlEsZUFBZTs7SUFtQ3hCLHdCQUFDO0NBQUEsQUE5QkQsSUE4QkM7U0ExQlksaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hlY2tvdXRTZXJ2aWNlIH0gZnJvbSAnLi8uLi9zZXJ2aWNlcy9jaGVja291dC5zZXJ2aWNlJztcbmltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBBZnRlclZpZXdJbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmltcG9ydCBDT05TVEFOVFMgZnJvbSAnLi4vY29uc3RhbnRzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncGF5dG0tY2hlY2tvdXQnLFxuICB0ZW1wbGF0ZTogYDxkaXYgW2lkXT1cImNoZWNrb3V0U2VydmljZS5jaGVja291dEpzQ29udGFpbmVySWRcIj48ZGl2PmAsXG59KVxuZXhwb3J0IGNsYXNzIENoZWNrb3V0Q29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95IHtcbiAgcHJpdmF0ZSBzdWJzOiBTdWJzY3JpcHRpb247XG5cbiAgY29uc3RydWN0b3IocmVhZG9ubHkgY2hlY2tvdXRTZXJ2aWNlOiBDaGVja291dFNlcnZpY2UpIHt9XG5cbiAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xuICAgIHRoaXMuc3VicyA9IHRoaXMuY2hlY2tvdXRTZXJ2aWNlXG4gICAgICAuY2hlY2tvdXRKc0luc3RhbmNlJFxuICAgICAgLnN1YnNjcmliZSh0aGlzLmludm9rZSk7XG4gIH1cblxuICBpbnZva2UoY2hlY2tvdXRKc0luc3RhbmNlKTogdm9pZCB7XG4gICAgaWYgKGNoZWNrb3V0SnNJbnN0YW5jZSAmJiBjaGVja291dEpzSW5zdGFuY2UuaW52b2tlKSB7XG4gICAgICB0cnkge1xuICAgICAgICBjaGVja291dEpzSW5zdGFuY2UuaW52b2tlKCk7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKENPTlNUQU5UUy5FUlJPUlMuSU5WT0tFLCBlcnJvcik7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuc3Vicykge1xuICAgICAgdGhpcy5zdWJzLnVuc3Vic2NyaWJlKCk7XG4gICAgfVxuICB9XG59XG4iXX0=